function [fitresult, gof] = FullLangmuirFit2(timeCut, fooCut)
%CREATEFITS(TIMECUT,FOOCUT,FOOCUT2)
%  Create fits.
%
%  Data for 'untitled fit 1' fit:
%      X Input : timeCut
%      Y Output: fooCut
%  Data for 'untitled fit 2' fit:
%      X Input : timeCut
%      Y Output: fooCut2
%  Data for 'untitled fit 5' fit:
%      Y Output: fooCut2
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 19-Aug-2020 20:31:35

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( timeCut, fooCut );

% Set up fittype and options.
ft = fittype( 'a*(kon*7e-09/(kon*7e-09+koff)).*(1-exp(-(kon*7e-09+koff).*(x))).*(x <= stop)+((kon*7e-09/(kon*7e-09+koff)) * (1 - exp(-(kon*7e-09+koff) * stop)) * exp(koff * stop))*a*exp(-koff * (x)).*(x > stop)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [2000 1.5e-05 100000 1200];
opts.StartPoint = [2000 5.5e-05 1000000 1200];
opts.Upper = [10000 Inf Inf 1300];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'fooCut vs. timeCut', 'untitled fit 1', 'Location', 'NorthEast' );
% Label axes
xlabel timeCut
ylabel fooCut
grid on

